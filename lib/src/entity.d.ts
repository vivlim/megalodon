import * as account from './entities/account';
import * as activity from './entities/activity';
import * as announcement from './entities/announcement';
import * as application from './entities/application';
import * as async_attachment from './entities/async_attachment';
import * as attachment from './entities/attachment';
import * as card from './entities/card';
import * as context from './entities/context';
import * as conversation from './entities/conversation';
import * as emoji from './entities/emoji';
import * as featured_tag from './entities/featured_tag';
import * as field from './entities/field';
import * as filter from './entities/filter';
import * as follow_request from './entities/follow_request';
import * as history from './entities/history';
import * as identity_proof from './entities/identity_proof';
import * as instance from './entities/instance';
import * as list from './entities/list';
import * as marker from './entities/marker';
import * as mention from './entities/mention';
import * as notification from './entities/notification';
import * as poll from './entities/poll';
import * as preferences from './entities/preferences';
import * as push_subscription from './entities/push_subscription';
import * as reaction from './entities/reaction';
import * as relationship from './entities/relationship';
import * as report from './entities/report';
import * as results from './entities/results';
import * as role from './entities/role';
import * as scheduled_status from './entities/scheduled_status';
import * as source from './entities/source';
import * as stats from './entities/stats';
import * as status from './entities/status';
import * as status_params from './entities/status_params';
import * as status_source from './entities/status_source';
import * as tag from './entities/tag';
import * as token from './entities/token';
import * as urls from './entities/urls';
export declare namespace Entity {
    type Account = account.Account;
    type Activity = activity.Activity;
    type Announcement = announcement.Announcement;
    type AnnouncementAccount = announcement.AnnouncementAccount;
    type AnnouncementStatus = announcement.AnnouncementStatus;
    type AnnouncementReaction = announcement.AnnouncementReaction;
    type Application = application.Application;
    type AsyncAttachment = async_attachment.AsyncAttachment;
    type Attachment = attachment.Attachment;
    type Sub = attachment.Sub;
    type Focus = attachment.Focus;
    type Meta = attachment.Meta;
    type Card = card.Card;
    type Context = context.Context;
    type Conversation = conversation.Conversation;
    type Emoji = emoji.Emoji;
    type FeaturedTag = featured_tag.FeaturedTag;
    type Field = field.Field;
    type Filter = filter.Filter;
    type FilterContext = filter.FilterContext;
    type FollowRequest = follow_request.FollowRequest;
    type History = history.History;
    type IdentityProof = identity_proof.IdentityProof;
    type Instance = instance.Instance;
    type InstanceRule = instance.InstanceRule;
    type List = list.List;
    type RepliesPolicy = list.RepliesPolicy;
    type Marker = marker.Marker;
    type Mention = mention.Mention;
    type Notification = notification.Notification;
    type NotificationType = notification.NotificationType;
    type Poll = poll.Poll;
    type PollOption = poll.PollOption;
    type Preferences = preferences.Preferences;
    type Alerts = push_subscription.Alerts;
    type PushSubscription = push_subscription.PushSubscription;
    type Reaction = reaction.Reaction;
    type Relationship = relationship.Relationship;
    type Report = report.Report;
    type Category = report.Category;
    type Results = results.Results;
    type Role = role.Role;
    type ScheduledStatus = scheduled_status.ScheduledStatus;
    type Source = source.Source;
    type Stats = stats.Stats;
    type Status = status.Status;
    type StatusVisibility = status.StatusVisibility;
    type StatusTag = status.StatusTag;
    type StatusParams = status_params.StatusParams;
    type StatusSource = status_source.StatusSource;
    type Tag = tag.Tag;
    type Token = token.Token;
    type URLs = urls.URLs;
}
export default Entity;
